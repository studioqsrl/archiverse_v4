apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: archiverse
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      serviceAccountName: frontend-sa
      nodeSelector:
        agentpool: frontendpool
      tolerations:
      - key: workload
        operator: Equal
        value: frontend
        effect: NoSchedule
      volumes:
      - name: secrets-store
        csi:
          driver: secrets-store.csi.x-k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: archiverse-frontend-secrets
      containers:
      - name: app-pool
        image: archiverseacr.azurecr.io/frontend # Base image, tag will be set by environment overlays
        volumeMounts:
        - name: secrets-store
          mountPath: "/mnt/secrets-store"
          readOnly: true
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        env:
        - name: NODE_ENV
          value: production
        - name: APP_BASE_URL
          valueFrom:
            secretKeyRef:
              name: archiverse-env
              key: APP_BASE_URL
        - name: NEXT_PUBLIC_AUTH0_DOMAIN
          valueFrom:
            secretKeyRef:
              name: archiverse-env
              key: NEXT_PUBLIC_AUTH0_DOMAIN
        - name: AUTH0_MANAGEMENT_API_DOMAIN
          valueFrom:
            secretKeyRef:
              name: archiverse-env
              key: AUTH0_MANAGEMENT_API_DOMAIN
        - name: SESSION_ENCRYPTION_SECRET
          valueFrom:
            secretKeyRef:
              name: archiverse-kv-secrets
              key: SESSION_ENCRYPTION_SECRET
        - name: AUTH0_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: archiverse-env
              key: AUTH0_CLIENT_ID
        - name: AUTH0_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: archiverse-kv-secrets
              key: AUTH0_CLIENT_SECRET
        - name: AUTH0_MANAGEMENT_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: archiverse-env
              key: AUTH0_MANAGEMENT_CLIENT_ID
        - name: AUTH0_MANAGEMENT_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: archiverse-kv-secrets
              key: AUTH0_MANAGEMENT_CLIENT_SECRET
        - name: AUTH0_ADMIN_ROLE_ID
          valueFrom:
            secretKeyRef:
              name: archiverse-env
              key: AUTH0_ADMIN_ROLE_ID
        - name: AUTH0_MEMBER_ROLE_ID
          valueFrom:
            secretKeyRef:
              name: archiverse-env
              key: AUTH0_MEMBER_ROLE_ID
        - name: DEFAULT_CONNECTION_ID
          valueFrom:
            secretKeyRef:
              name: archiverse-env
              key: DEFAULT_CONNECTION_ID
        - name: CUSTOM_CLAIMS_NAMESPACE
          valueFrom:
            secretKeyRef:
              name: archiverse-env
              key: CUSTOM_CLAIMS_NAMESPACE
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 5
        startupProbe:
          httpGet:
            path: /
            port: 3000
          failureThreshold: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: archiverse
spec:
  selector:
    app: frontend
  ports:
  - port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend-network-policy
  namespace: archiverse
spec:
  podSelector:
    matchLabels:
      app: frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 3000
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: api
    ports:
    - protocol: TCP
      port: 80
  - to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
